group_by(Model) %>% summarise(count_ev = n()) %>% head(10)
EV_County_king
EV_County_king <- EV_Population_Clean %>% filter(County == "King" & Electric.Range > 0) %>%
group_by(Model) %>% summarise(count_ev = n()) %>% head(10)
EV_County_king
EV_County_king <- EV_Population_Clean %>% filter(County == "King" & Electric.Range > 0) %>%
group_by(Model) %>% summarise(count_ev = n()) %>% arrange(-count_ev)
EV_County_king
EV_County_king <- EV_Population_Clean %>% filter(County == "King" & Electric.Range > 0) %>%
group_by(Model) %>% summarise(count_ev = n()) %>%
arrange(-count_ev) %>%
head(10)
EV_County_king
ggplot(data = EV_County_king, mapping = aes(x = Model, y = count_ev)) +
geom_col()
ggplot(data = EV_County_king, mapping = aes(x = count_ev, y = Model)) +
geom_col()
EV_County_king_mean <- EV_Population_Clean %>%
filter(County == "King" & Electric.Range > 0) %>%  group_by(Model) %>%
summarise(avg_range = mean(Electric.Range, round(2)),
length_model = length(Model))%>%
arrange(-avg_range)
EV_County_king_mean
ggplot(data = EV_County_king_mean, mapping = aes(x = length_model, y = avg_range)) +
geom_point()
EV_Population_Clean %>% filter(County == "King" & Electric.Range > 0) %>%
group_by(Make, Electric.Range) %>%
summarise(count_model = n()) %>%
arrange(-count_model) %>%
head(10)
EV_Population_Clean %>% filter(County == "King" & Electric.Range > 0) %>%
group_by(Make, Electric.Range) %>%
summarise(count_model = n()) %>%
arrange(-count_model)
EV_Make <- EV_Population_Clean %>% filter(County == "King" & Electric.Range > 0) %>%
group_by(Make, Electric.Range) %>%
summarise(count_model = n()) %>%
arrange(-count_model)
ggplot(data = EV_County_king, mapping = aes(x = count_model, y = Make)) +
geom_boxplotl()
library(ggplot2)
ggplot(data = EV_County_king, mapping = aes(x = count_model, y = Make)) +
geom_boxplotl()
ggplot(data = EV_County_king, mapping = aes(x = count_model, y = Make)) +
geom_boxplotl()
ggplot(data = EV_County_king, mapping = aes(x = count_model, y = Make)) +
geom_boxplot()
ggplot(data = EV_Make, mapping = aes(x = count_model, y = Make)) +
geom_boxplot()
EV_Make <- EV_Population_Clean %>% filter(County == "King" & Electric.Range > 0) %>%
group_by(Make, Electric.Range) %>%
summarise(count_model = n()) %>%
arrange(-count_model) %>% head(10)
ggplot(data = EV_Make, mapping = aes(x = count_model, y = Make)) +
geom_boxplot()
ggplot(data = EV_Make, mapping = aes(x = count_model, y = Make)) +
geom_boxplot()
EV_Make <- EV_Population_Clean %>% filter(County == "King" & Electric.Range > 0) %>%
group_by(Make, Electric.Range) %>%
summarise(count_model = n()) %>%
arrange(-count_model)
ggplot(data = EV_Make, mapping = aes(x = count_model, y = Make)) +
geom_boxplot()
cor(EV_County_king_mean$length_model, EV_County_king_mean$avg_range)
EV_County_king <- EV_Population_Clean %>% filter(County == "King" & Electric.Range > 0) %>%
group_by(Model) %>% summarise(count_ev = n()) %>%
arrange(-count_ev)
EV_County_king
ggplot(data = EV_County_king, mapping = aes(x = count_ev, y = Model)) +
geom_col()
EV_County_king <- EV_Population_Clean %>% filter(County == "King" & Electric.Range > 0) %>%
group_by(Model) %>% summarise(count_ev = n()) %>%
arrange(-count_ev) %>%
head(10)
EV_County_king
ggplot(data = EV_County_king, mapping = aes(x = count_ev, y = Model)) +
geom_col()
ggplot(data = EV_County_king, mapping = aes(x = count_ev, y = reorder(Model, count_ev))) +
geom_col()
ggplot(data = EV_County_king, mapping = aes(x = count_ev, y = reorder(Model, count_ev))) +
geom_col(aes(fill = count_ev), col = "darkred")
ggplot(data = EV_County_king, mapping = aes(x = count_ev, y = reorder(Model, count_ev))) +
geom_col(aes(fill = count_ev), col = "darkred") +
scale_fill_gradient(low="white", high="salmon")
ggplot(data = EV_County_king, mapping = aes(x = count_ev, y = reorder(Model, count_ev))) +
geom_col(aes(fill = count_ev), col = "darkred") +
scale_fill_gradient(low="white", high="darkblue")
ggplot(data = EV_County_king, mapping = aes(x = count_ev, y = reorder(Model, count_ev))) +
geom_col(aes(fill = count_ev), col = "darkred") +
scale_fill_gradient(low="white", high="darkblue")+
geom_label(aes(label = count_ev))
ggplot(data = EV_County_king, mapping = aes(x = count_ev, y = reorder(Model, count_ev))) +
geom_col(aes(fill = count_ev), col = "darkred") +
scale_fill_gradient(low="white", high="darkblue")+
geom_label(aes(label = count_ev)) +
labs(
title = "Top 10 Model Electrical Vehicle In King COunty",
subtitle = "2012 - 2023",
x = "Total Eelctrical Vehicle",
y = NULL,
caption = "Source: catalog.data.gov"
)
ggplot(data = EV_County_king_mean, mapping = aes(x = length_model, y = avg_range)) +
geom_jitter(mapping = aes(size = avg_range), col = "red", alpha = 0.5)
ggplot(data = EV_County_king_mean, mapping = aes(x = length_model, y = avg_range)) +
geom_jitter(mapping = aes(size = avg_range), col = "red", alpha = 0.5) +
labs(
title = "Average Range Per Count Model Distribution for Each Make",
subtitle = "2012 - 2023",
x = "Count Model",
y = "Average Range",
size = "Comment per Views"
)
ggplot(data = EV_Make, mapping = aes(x = count_model, y = Make)) +
geom_boxplot(fill = "black", col = "red")
ggplot(data = EV_Make, mapping = aes(x = count_model, y = Make)) +
geom_boxplot(fill = "salmon", col = "black")
ggplot(data = EV_Make, mapping = aes(x = count_model, y = Make)) +
geom_boxplot(fill = "salmon", col = "black") +
labs(
title = "Count Model In King County Distribution for Each Model",
subtitle = "2012 - 2023",
x = "Count Model",
y = NULL
)
ggplot(data = EV_County_king_mean, mapping = aes(x = length_model, y = avg_range)) +
geom_jitter(mapping = aes(size = avg_range), col = "red", alpha = 0.5) +
labs(
title = "Average Range Per Count Model Distribution for Each Make",
subtitle = "2012 - 2023",
x = "Count Model",
y = "Average Range",
size = "Comment per Views",
caption = "Source: catalog.data.gov"
)
mean_range <- mean(EV_Population_Clean$Electric.Range)
mean_range
EV_Population_Clean[is.na(EV_Population_Clean)] <- 0
EV_Population_Clean <- mutate(EV_Population_Clean,
County = as.factor(County),
City = as.factor(City),
Make = as.factor(Make),
Model = as.factor(Model))
summary(EV_Population_Clean)
mean_range <- mean(EV_Population_Clean$Electric.Range)
mean_range
sd_range
sd_range <- sd(EV_Population_Clean$Electric.Range)
sd_range
# Delee coloumn
EV_Population_Clean <-  select(EV_Population,
-State,
-Postal.Code,
-Legislative.District,
-Vehicle.Location,
-X2020.Census.Tract)
colSums(is.na(EV_Population_Clean))
EV_Population_Clean[is.na(EV_Population_Clean)] <- 0
head(EV_Population_Clean)
colnames(EV_Population_Clean)[7] <- "EV_Type"
colnames(EV_Population_Clean)[8] <- "CAFV"
head(EV_Population_Clean)
# aggregasi data
EV_king_type <- EV_Population_Clean %>%
filter(County == "King") %>%
group_by(Model, EV_Type) %>%
summarise(count_model = n()) %>%
arrange(-count_model)
ggplot(EV_king_type, mapping = aes(x = count_model, y = reorder(Model, count_model)))+
geom_col(aes(fill = EV_type), position = "fill")+
labs(
title = "Total Video Base On Publish Hours Trending Videos",
subtitle = "category Vs Publish Hour",
x = "Total Video",
y = NULL,
fill = "Publish Hour",
caption = "Source: Youtube US Trending"
) + theme_light()
# aggregasi data
EV_king_type <- EV_Population_Clean %>%
filter(County == "King") %>%
group_by(Make, EV_Type) %>%
summarise(count_make = n()) %>%
arrange(-count_make)
ggplot(EV_king_type, mapping = aes(x = count_make, y = reorder(Model, count_make)))+
geom_col(aes(fill = EV_type), position = "fill")+
labs(
title = "Total Video Base On Publish Hours Trending Videos",
subtitle = "category Vs Publish Hour",
x = "Total Video",
y = NULL,
fill = "Publish Hour",
caption = "Source: Youtube US Trending"
) + theme_light()
EV_king_type
ggplot(EV_king_type, mapping = aes(x = count_make, y = reorder(Model, count_make)))+
geom_col(aes(fill = EV_Type), position = "fill")+
labs(
title = "Total Video Base On Publish Hours Trending Videos",
subtitle = "category Vs Publish Hour",
x = "Total Video",
y = NULL,
fill = "Publish Hour",
caption = "Source: Youtube US Trending"
) + theme_light()
ggplot(EV_king_type, mapping = aes(x = count_make, y = reorder(Make, count_make)))+
geom_col(aes(fill = EV_Type), position = "fill")+
labs(
title = "Total Video Base On Publish Hours Trending Videos",
subtitle = "category Vs Publish Hour",
x = "Total Video",
y = NULL,
fill = "Publish Hour",
caption = "Source: Youtube US Trending"
) + theme_light()
# aggregasi data
EV_king_type <- EV_Population_Clean %>%
filter(County == "King") %>%
group_by(Make, EV_Type) %>%
summarise(count_make = n()) %>%
arrange(-count_make) %>%
head(10)
EV_king_type
ggplot(EV_king_type, mapping = aes(x = count_make, y = reorder(Make, count_make)))+
geom_col(aes(fill = EV_Type), position = "fill")+
labs(
title = "Total Video Base On Publish Hours Trending Videos",
subtitle = "category Vs Publish Hour",
x = "Total Video",
y = NULL,
fill = "Publish Hour",
caption = "Source: Youtube US Trending"
) + theme_light()
ggplot(EV_king_type, mapping = aes(x = count_make, y = reorder(Make, count_make)))+
geom_col(aes(fill = EV_Type), position = "fill")+
labs(
title = "Top 10 Make in King County",
subtitle = "Make Vs Electrical Vehicle type",
x = "Total Make",
y = NULL,
fill = "Eelctrical Vehicle Type",
caption = "Source: catalog.data.gov"
) + theme_light()
View(EV_Piopulation)
glimpse(EV_Population)
# clear-up the environment
rm(list = ls())
# chunk options
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
fig.align = "center",
comment = "#>"
)
options(scipen = 999)
EV_Population <- read.csv("Electric_Vehicle_Population_Data.csv")
head(EV_Population)
library(tidyverse)
glimpse(EV_Population)
# Delee coloumn
EV_Population_Clean <-  select(EV_Population,
-State,
-Postal.Code,
-Legislative.District,
-Vehicle.Location,
-X2020.Census.Tract)
colSums(is.na(EV_Population_Clean))
EV_Population_Clean[is.na(EV_Population_Clean)] <- 0
colnames(EV_Population_Clean)[7] <- "EV_Type"
colnames(EV_Population_Clean)[8] <- "CAFV"
EV_Population_Clean <- mutate(EV_Population_Clean,
County = as.factor(County),
City = as.factor(City),
Make = as.factor(Make),
Model = as.factor(Model))
summary(EV_Population_Clean)
library(ggplot2)
EV_Make <- EV_Population_Clean %>% filter(County == "King" & Electric.Range > 0) %>%
group_by(Make, Electric.Range) %>%
summarise(count_model = n()) %>%
arrange(-count_model)
ggplot(data = EV_Make, mapping = aes(x = count_model, y = Make)) +
geom_boxplot(fill = "salmon", col = "black") +
labs(
title = "Count Model In King County Distribution for Each Model",
subtitle = "2012 - 2023",
x = "Count Model",
y = NULL
)
EV_County_king <- EV_Population_Clean %>% filter(County == "King" & Electric.Range > 0) %>%
group_by(Model) %>% summarise(count_ev = n()) %>%
arrange(-count_ev) %>%
head(10)
EV_County_king
ggplot(data = EV_County_king, mapping = aes(x = count_ev, y = reorder(Model, count_ev))) +
geom_col(aes(fill = count_ev), col = "darkred") +
scale_fill_gradient(low="white", high="darkblue")+
geom_label(aes(label = count_ev)) +
labs(
title = "Top 10 Model Electrical Vehicle In King COunty",
subtitle = "2012 - 2023",
x = "Total Eelctrical Vehicle",
y = NULL,
caption = "Source: catalog.data.gov"
)
# aggregasi data
EV_king_type <- EV_Population_Clean %>%
filter(County == "King") %>%
group_by(Make, EV_Type) %>%
summarise(count_make = n()) %>%
arrange(-count_make) %>%
head(10)
ggplot(EV_king_type, mapping = aes(x = count_make, y = reorder(Make, count_make)))+
geom_col(aes(fill = EV_Type), position = "fill")+
labs(
title = "Top 10 Make in King County",
subtitle = "Make Vs Electrical Vehicle type",
x = "Total Make",
y = NULL,
fill = "Eelctrical Vehicle Type",
caption = "Source: catalog.data.gov"
) + theme_light()
EV_County_king_mean <- EV_Population_Clean %>%
filter(County == "King" & Electric.Range > 0) %>%  group_by(Model) %>%
summarise(avg_range = mean(Electric.Range, round(2)),
length_model = length(Model))%>%
arrange(-avg_range)
EV_County_king_mean
ggplot(data = EV_County_king_mean, mapping = aes(x = length_model, y = avg_range)) +
geom_jitter(mapping = aes(size = avg_range), col = "red", alpha = 0.5) +
labs(
title = "Average Range Per Count Model Distribution for Each Make",
subtitle = "2012 - 2023",
x = "Count Model",
y = "Average Range",
size = "Comment per Views",
caption = "Source: catalog.data.gov"
)
cor(EV_County_king_mean$length_model, EV_County_king_mean$avg_range)
# Aggregation data for county King
EV_Make <- EV_Population_Clean %>% filter(County == "King" & Electric.Range > 0) %>%
group_by(Make, Electric.Range) %>%
summarise(count_make = n()) %>%
arrange(-count_make)
# Plot from EV_Make
ggplot(data = EV_Make, mapping = aes(x = count_make, y = Make)) +
geom_boxplot(fill = "salmon", col = "black") +
labs(
title = "Count Model In King County Distribution for Each Model",
subtitle = "2012 - 2023",
x = "Count Model",
y = NULL
)
# Plot from EV_Make
ggplot(data = EV_Make, mapping = aes(x = count_make, y = Make)) +
geom_boxplot(fill = "salmon", col = "black") +
labs(
title = "Count Model In King County Distribution for Each Make",
subtitle = "2012 - 2023",
x = "Count Model",
y = NULL
)
# Aggregation data for county King
EV_County_king <- EV_Population_Clean %>% filter(County == "King" & Electric.Range > 0) %>%
group_by(Model) %>% summarise(count_ev = n()) %>%
arrange(-count_ev) %>%
head(10)
ggplot(data = EV_County_king, mapping = aes(x = count_ev, y = reorder(Model, count_ev))) +
geom_col(aes(fill = count_ev), col = "darkred") +
scale_fill_gradient(low="white", high="darkblue")+
geom_label(aes(label = count_ev)) +
labs(
title = "Top 10 Model Electrical Vehicle In King COunty",
subtitle = "2012 - 2023",
x = "Total Eelctrical Vehicle",
y = NULL,
caption = "Source: catalog.data.gov"
)
# Plot form EV_County_king
ggplot(data = EV_County_king, mapping = aes(x = count_ev, y = reorder(Model, count_ev))) +
geom_col(aes(fill = count_ev), col = "darkred") +
scale_fill_gradient(low="white", high="darkblue")+
geom_label(aes(label = count_ev)) +
labs(
title = "Top 10 Model Electrical Vehicle In King COunty",
subtitle = "2012 - 2023",
x = "Total Eelctrical Vehicle",
y = NULL,
caption = "Source: catalog.data.gov"
)
# Plot form EV_County_king
ggplot(data = EV_County_king, mapping = aes(x = count_ev, y = reorder(Model, count_ev))) +
geom_col(aes(fill = count_ev), col = "darkred") +
scale_fill_gradient(low="white", high="darkblue")+
geom_label(aes(label = count_ev)) +
labs(
title = "Top 10 Model Electrical Vehicle In King County",
subtitle = "2012 - 2023",
x = "Total Eelctrical Vehicle",
y = NULL,
caption = "Source: catalog.data.gov"
)
# # Aggregation data for county King
EV_king_type <- EV_Population_Clean %>%
filter(County == "King") %>%
group_by(Make, EV_Type) %>%
summarise(count_make = n()) %>%
arrange(-count_make) %>%
head(10)
# Aggregation data for county King
EV_Make <- EV_Population_Clean %>% filter(County == "King" & Electric.Range > 0) %>%
group_by(Make, Electric.Range) %>%
summarise(count_make = n(),.groups = "drop") %>%
arrange(-count_make)
# Plot from EV_Make
ggplot(data = EV_Make, mapping = aes(x = count_make, y = Make)) +
geom_boxplot(fill = "salmon", col = "black") +
labs(
title = "Count Model In King County Distribution for Each Make",
subtitle = "2012 - 2023",
x = "Count Model",
y = NULL
)
# Aggregation data for county King
EV_County_king <- EV_Population_Clean %>% filter(County == "King" & Electric.Range > 0) %>%
group_by(Model) %>% summarise(count_ev = n()) %>%
arrange(-count_ev)
# Plot form EV_County_king
ggplot(data = EV_County_king, mapping = aes(x = count_ev, y = reorder(Model, count_ev))) +
geom_col(aes(fill = count_ev), col = "darkred") +
scale_fill_gradient(low="white", high="darkblue")+
geom_label(aes(label = count_ev)) +
labs(
title = "Top 10 Model Electrical Vehicle In King County",
subtitle = "2012 - 2023",
x = "Total Eelctrical Vehicle",
y = NULL,
caption = "Source: catalog.data.gov"
)
# Aggregation data for county King
EV_County_king <- EV_Population_Clean %>% filter(County == "King" & Electric.Range > 0) %>%
group_by(Model) %>% summarise(count_ev = n()) %>%
arrange(-count_ev) %>%
head(10)
# Plot form EV_County_king
ggplot(data = EV_County_king, mapping = aes(x = count_ev, y = reorder(Model, count_ev))) +
geom_col(aes(fill = count_ev), col = "darkred") +
scale_fill_gradient(low="white", high="darkblue")+
geom_label(aes(label = count_ev)) +
labs(
title = "Top 10 Model Electrical Vehicle In King County",
subtitle = "2012 - 2023",
x = "Total Eelctrical Vehicle",
y = NULL,
caption = "Source: catalog.data.gov"
)
# # Aggregation data for county King
EV_king_type <- EV_Population_Clean %>%
filter(County == "King") %>%
group_by(Make, EV_Type) %>%
summarise(count_make = n(),.groups = "drop") %>%
arrange(-count_make) %>%
head(10)
ggplot(EV_king_type, mapping = aes(x = count_make, y = reorder(Make, count_make)))+
geom_col(aes(fill = EV_Type), position = "fill")+
labs(
title = "Top 10 Make in King County",
subtitle = "Make Vs Electrical Vehicle type",
x = "Total Make",
y = NULL,
fill = "Eelctrical Vehicle Type",
caption = "Source: catalog.data.gov"
) + theme_light()
EV_County_king_mean <- EV_Population_Clean %>%
filter(County == "King" & Electric.Range > 0) %>%  group_by(Model) %>%
summarise(avg_range = mean(Electric.Range, round(2)),
length_model = length(Model))%>%
arrange(-avg_range)
# Plot from EV_County_king_mean
ggplot(data = EV_County_king_mean, mapping = aes(x = length_model, y = avg_range)) +
geom_jitter(mapping = aes(size = avg_range), col = "red", alpha = 0.3) +
labs(
title = "Average Range Per Count Model Distribution for Each Make",
subtitle = "2012 - 2023",
x = "Count Model",
y = "Average Range",
size = "Electrical Range",
caption = "Source: catalog.data.gov"
)
EV_Population_Clean %>%
filter(County == "King") %>%
group_by(Make, CAFV) %>%
summarise(count_cafv = n(),.groups = "drop") %>%
arrange(-count_cafv) %>%
head(10)
EV_king_cafv <- EV_Population_Clean %>%
filter(County == "King") %>%
group_by(Make, CAFV) %>%
summarise(count_cafv = n(),.groups = "drop") %>%
arrange(-count_cafv) %>%
head(10)
# Plot from EV_king_type
ggplot(EV_king_cafv, mapping = aes(x = count_cafv, y = reorder(Make, count_cafv)))+
geom_col(aes(fill = CAFV), position = "fill")+
labs(
title = "Top 10 Make in King County CAFV",
subtitle = "Make Vs CAFV",
x = "Total Make",
y = NULL,
fill = "CAFV",
caption = "Source: catalog.data.gov"
) + theme_light()
